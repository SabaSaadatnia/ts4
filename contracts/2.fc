{-
  TASK 2 - Matrix multiplier
  Write the method that multiplies one matrix by another.
  The 1st and 2nd parameter of the function will contain
  a matrix implemented using tuples (eg: [[1,2], [3,4]]).
  Matrices can be of different sizes, ranging from 4x4
  up to 32x32.
  Matrix can be rectangular where matrixA must to be of size n*m & matrixB of size m*p.
  After calculating the result matrix, the function should return final result (as tuple).
-}
int tlen(tuple t) asm "TLEN";
() recv_internal() {
}

;; testable
(tuple) matrix_multiplier(tuple matrixA, tuple matrixB) method_id {
    int rowA = tlen(matrixA);
    int rowB = tlen(matrixB);
    int columnB = tlen(matrixB.at(1));
    int columnA = tlen(matrixA.at(1));
    int i = 0;
    int j = 0;
    int k = 0;
    int number = 0;
    tuple answer = empty_tuple();
    while(i < rowA){
        tuple row_answer = empty_tuple();
        while(j < columnB){
            while(k < columnA){
                number += matrixA.at(i).at(k) * matrixB.at(k).at(j);
                k += 1;
            }
            row_answer~tpush(number);
            number = 0;
            k = 0;
            j += 1;
        }
        answer~tpush(row_answer);
        j = 0;
        i += 1;
    }
  return answer;
}
